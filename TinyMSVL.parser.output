Terminals unused in grammar

    RETURN
    COMMA


State 24 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statement END

    2 statement: statement AND statement
    3          | statement OR statement
    4          | statement CHOP statement
    5          | exp
    6          | declaration
    7          | asgnstmt
    8          | SKIP
    9          | ifstmt
   10          | OPENPAR statement CLOSEPAR
   11          | END

   12 declaration: INT ID

   13 asgnstmt: ID ASSP exp
   14         | ID ASSN exp

   15 ifstmt: IF exp THEN OPENBPAR statement CLOSEBPAR optelsestmt

   16 optelsestmt: ELSE OPENBPAR statement CLOSEBPAR
   17            | %empty

   18 exp: unaryExp
   19    | exp BOOLOR exp
   20    | exp BOOLAND exp
   21    | exp EQ exp
   22    | exp NE exp
   23    | exp GT exp
   24    | exp GE exp
   25    | exp LT exp
   26    | exp LE exp
   27    | exp ADD exp
   28    | exp SUB exp
   29    | exp MUL exp
   30    | exp DIV exp

   31 unaryExp: primaryExp
   32         | SUB unaryExp
   33         | NEGATION unaryExp

   34 primaryExp: constExp
   35           | ID
   36           | OPENPAR exp CLOSEPAR

   37 constExp: INTLITERAL


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 15
    ELSE (259) 16
    SKIP (260) 8
    THEN (261) 15
    INT (262) 12
    OPENPAR (263) 10 36
    CLOSEPAR (264) 10 36
    OPENBPAR (265) 15 16
    CLOSEBPAR (266) 15 16
    RETURN (267)
    END (268) 1 11
    COMMA (269)
    CHOP (270) 4
    OR (271) 3
    AND (272) 2
    ASSP (273) 13
    ASSN (274) 14
    BOOLOR (275) 19
    BOOLAND (276) 20
    NE (277) 22
    EQ (278) 21
    GE (279) 24
    LE (280) 26
    GT (281) 23
    LT (282) 25
    ADD (283) 27
    SUB (284) 28 32
    MUL (285) 29
    DIV (286) 30
    NEGATION (287) 33
    ID <s> (288) 12 13 14 35
    INTLITERAL <val> (289) 37


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    program <node> (36)
        on left: 1
        on right: 0
    statement <node> (37)
        on left: 2 3 4 5 6 7 8 9 10 11
        on right: 1 2 3 4 10 15 16
    declaration <node> (38)
        on left: 12
        on right: 6
    asgnstmt <node> (39)
        on left: 13 14
        on right: 7
    ifstmt <node> (40)
        on left: 15
        on right: 9
    optelsestmt <node> (41)
        on left: 16 17
        on right: 15
    exp <node> (42)
        on left: 18 19 20 21 22 23 24 25 26 27 28 29 30
        on right: 5 13 14 15 19 20 21 22 23 24 25 26 27 28 29 30 36
    unaryExp <node> (43)
        on left: 31 32 33
        on right: 18 32 33
    primaryExp <node> (44)
        on left: 34 35 36
        on right: 31
    constExp <node> (45)
        on left: 37
        on right: 34


State 0

    0 $accept: . program $end

    IF          shift, and go to state 1
    SKIP        shift, and go to state 2
    INT         shift, and go to state 3
    OPENPAR     shift, and go to state 4
    END         shift, and go to state 5
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 8
    INTLITERAL  shift, and go to state 9

    program      go to state 10
    statement    go to state 11
    declaration  go to state 12
    asgnstmt     go to state 13
    ifstmt       go to state 14
    exp          go to state 15
    unaryExp     go to state 16
    primaryExp   go to state 17
    constExp     go to state 18


State 1

   15 ifstmt: IF . exp THEN OPENBPAR statement CLOSEBPAR optelsestmt

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    exp         go to state 21
    unaryExp    go to state 16
    primaryExp  go to state 17
    constExp    go to state 18


State 2

    8 statement: SKIP .

    $default  reduce using rule 8 (statement)


State 3

   12 declaration: INT . ID

    ID  shift, and go to state 22


State 4

   10 statement: OPENPAR . statement CLOSEPAR
   36 primaryExp: OPENPAR . exp CLOSEPAR

    IF          shift, and go to state 1
    SKIP        shift, and go to state 2
    INT         shift, and go to state 3
    OPENPAR     shift, and go to state 4
    END         shift, and go to state 5
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 8
    INTLITERAL  shift, and go to state 9

    statement    go to state 23
    declaration  go to state 12
    asgnstmt     go to state 13
    ifstmt       go to state 14
    exp          go to state 24
    unaryExp     go to state 16
    primaryExp   go to state 17
    constExp     go to state 18


State 5

   11 statement: END .

    $default  reduce using rule 11 (statement)


State 6

   32 unaryExp: SUB . unaryExp

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    unaryExp    go to state 25
    primaryExp  go to state 17
    constExp    go to state 18


State 7

   33 unaryExp: NEGATION . unaryExp

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    unaryExp    go to state 26
    primaryExp  go to state 17
    constExp    go to state 18


State 8

   13 asgnstmt: ID . ASSP exp
   14         | ID . ASSN exp
   35 primaryExp: ID .

    ASSP  shift, and go to state 27
    ASSN  shift, and go to state 28

    $default  reduce using rule 35 (primaryExp)


State 9

   37 constExp: INTLITERAL .

    $default  reduce using rule 37 (constExp)


State 10

    0 $accept: program . $end

    $end  shift, and go to state 29


State 11

    1 program: statement . END
    2 statement: statement . AND statement
    3          | statement . OR statement
    4          | statement . CHOP statement

    END   shift, and go to state 30
    CHOP  shift, and go to state 31
    OR    shift, and go to state 32
    AND   shift, and go to state 33


State 12

    6 statement: declaration .

    $default  reduce using rule 6 (statement)


State 13

    7 statement: asgnstmt .

    $default  reduce using rule 7 (statement)


State 14

    9 statement: ifstmt .

    $default  reduce using rule 9 (statement)


State 15

    5 statement: exp .
   19 exp: exp . BOOLOR exp
   20    | exp . BOOLAND exp
   21    | exp . EQ exp
   22    | exp . NE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . LT exp
   26    | exp . LE exp
   27    | exp . ADD exp
   28    | exp . SUB exp
   29    | exp . MUL exp
   30    | exp . DIV exp

    BOOLOR   shift, and go to state 34
    BOOLAND  shift, and go to state 35
    NE       shift, and go to state 36
    EQ       shift, and go to state 37
    GE       shift, and go to state 38
    LE       shift, and go to state 39
    GT       shift, and go to state 40
    LT       shift, and go to state 41
    ADD      shift, and go to state 42
    SUB      shift, and go to state 43
    MUL      shift, and go to state 44
    DIV      shift, and go to state 45

    $default  reduce using rule 5 (statement)


State 16

   18 exp: unaryExp .

    $default  reduce using rule 18 (exp)


State 17

   31 unaryExp: primaryExp .

    $default  reduce using rule 31 (unaryExp)


State 18

   34 primaryExp: constExp .

    $default  reduce using rule 34 (primaryExp)


State 19

   36 primaryExp: OPENPAR . exp CLOSEPAR

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    exp         go to state 46
    unaryExp    go to state 16
    primaryExp  go to state 17
    constExp    go to state 18


State 20

   35 primaryExp: ID .

    $default  reduce using rule 35 (primaryExp)


State 21

   15 ifstmt: IF exp . THEN OPENBPAR statement CLOSEBPAR optelsestmt
   19 exp: exp . BOOLOR exp
   20    | exp . BOOLAND exp
   21    | exp . EQ exp
   22    | exp . NE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . LT exp
   26    | exp . LE exp
   27    | exp . ADD exp
   28    | exp . SUB exp
   29    | exp . MUL exp
   30    | exp . DIV exp

    THEN     shift, and go to state 47
    BOOLOR   shift, and go to state 34
    BOOLAND  shift, and go to state 35
    NE       shift, and go to state 36
    EQ       shift, and go to state 37
    GE       shift, and go to state 38
    LE       shift, and go to state 39
    GT       shift, and go to state 40
    LT       shift, and go to state 41
    ADD      shift, and go to state 42
    SUB      shift, and go to state 43
    MUL      shift, and go to state 44
    DIV      shift, and go to state 45


State 22

   12 declaration: INT ID .

    $default  reduce using rule 12 (declaration)


State 23

    2 statement: statement . AND statement
    3          | statement . OR statement
    4          | statement . CHOP statement
   10          | OPENPAR statement . CLOSEPAR

    CLOSEPAR  shift, and go to state 48
    CHOP      shift, and go to state 31
    OR        shift, and go to state 32
    AND       shift, and go to state 33


State 24

    5 statement: exp .
   19 exp: exp . BOOLOR exp
   20    | exp . BOOLAND exp
   21    | exp . EQ exp
   22    | exp . NE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . LT exp
   26    | exp . LE exp
   27    | exp . ADD exp
   28    | exp . SUB exp
   29    | exp . MUL exp
   30    | exp . DIV exp
   36 primaryExp: OPENPAR exp . CLOSEPAR

    CLOSEPAR  shift, and go to state 49
    BOOLOR    shift, and go to state 34
    BOOLAND   shift, and go to state 35
    NE        shift, and go to state 36
    EQ        shift, and go to state 37
    GE        shift, and go to state 38
    LE        shift, and go to state 39
    GT        shift, and go to state 40
    LT        shift, and go to state 41
    ADD       shift, and go to state 42
    SUB       shift, and go to state 43
    MUL       shift, and go to state 44
    DIV       shift, and go to state 45

    CLOSEPAR  [reduce using rule 5 (statement)]
    $default  reduce using rule 5 (statement)


State 25

   32 unaryExp: SUB unaryExp .

    $default  reduce using rule 32 (unaryExp)


State 26

   33 unaryExp: NEGATION unaryExp .

    $default  reduce using rule 33 (unaryExp)


State 27

   13 asgnstmt: ID ASSP . exp

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    exp         go to state 50
    unaryExp    go to state 16
    primaryExp  go to state 17
    constExp    go to state 18


State 28

   14 asgnstmt: ID ASSN . exp

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    exp         go to state 51
    unaryExp    go to state 16
    primaryExp  go to state 17
    constExp    go to state 18


State 29

    0 $accept: program $end .

    $default  accept


State 30

    1 program: statement END .

    $default  reduce using rule 1 (program)


State 31

    4 statement: statement CHOP . statement

    IF          shift, and go to state 1
    SKIP        shift, and go to state 2
    INT         shift, and go to state 3
    OPENPAR     shift, and go to state 4
    END         shift, and go to state 5
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 8
    INTLITERAL  shift, and go to state 9

    statement    go to state 52
    declaration  go to state 12
    asgnstmt     go to state 13
    ifstmt       go to state 14
    exp          go to state 15
    unaryExp     go to state 16
    primaryExp   go to state 17
    constExp     go to state 18


State 32

    3 statement: statement OR . statement

    IF          shift, and go to state 1
    SKIP        shift, and go to state 2
    INT         shift, and go to state 3
    OPENPAR     shift, and go to state 4
    END         shift, and go to state 5
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 8
    INTLITERAL  shift, and go to state 9

    statement    go to state 53
    declaration  go to state 12
    asgnstmt     go to state 13
    ifstmt       go to state 14
    exp          go to state 15
    unaryExp     go to state 16
    primaryExp   go to state 17
    constExp     go to state 18


State 33

    2 statement: statement AND . statement

    IF          shift, and go to state 1
    SKIP        shift, and go to state 2
    INT         shift, and go to state 3
    OPENPAR     shift, and go to state 4
    END         shift, and go to state 5
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 8
    INTLITERAL  shift, and go to state 9

    statement    go to state 54
    declaration  go to state 12
    asgnstmt     go to state 13
    ifstmt       go to state 14
    exp          go to state 15
    unaryExp     go to state 16
    primaryExp   go to state 17
    constExp     go to state 18


State 34

   19 exp: exp BOOLOR . exp

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    exp         go to state 55
    unaryExp    go to state 16
    primaryExp  go to state 17
    constExp    go to state 18


State 35

   20 exp: exp BOOLAND . exp

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    exp         go to state 56
    unaryExp    go to state 16
    primaryExp  go to state 17
    constExp    go to state 18


State 36

   22 exp: exp NE . exp

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    exp         go to state 57
    unaryExp    go to state 16
    primaryExp  go to state 17
    constExp    go to state 18


State 37

   21 exp: exp EQ . exp

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    exp         go to state 58
    unaryExp    go to state 16
    primaryExp  go to state 17
    constExp    go to state 18


State 38

   24 exp: exp GE . exp

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    exp         go to state 59
    unaryExp    go to state 16
    primaryExp  go to state 17
    constExp    go to state 18


State 39

   26 exp: exp LE . exp

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    exp         go to state 60
    unaryExp    go to state 16
    primaryExp  go to state 17
    constExp    go to state 18


State 40

   23 exp: exp GT . exp

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    exp         go to state 61
    unaryExp    go to state 16
    primaryExp  go to state 17
    constExp    go to state 18


State 41

   25 exp: exp LT . exp

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    exp         go to state 62
    unaryExp    go to state 16
    primaryExp  go to state 17
    constExp    go to state 18


State 42

   27 exp: exp ADD . exp

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    exp         go to state 63
    unaryExp    go to state 16
    primaryExp  go to state 17
    constExp    go to state 18


State 43

   28 exp: exp SUB . exp

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    exp         go to state 64
    unaryExp    go to state 16
    primaryExp  go to state 17
    constExp    go to state 18


State 44

   29 exp: exp MUL . exp

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    exp         go to state 65
    unaryExp    go to state 16
    primaryExp  go to state 17
    constExp    go to state 18


State 45

   30 exp: exp DIV . exp

    OPENPAR     shift, and go to state 19
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 20
    INTLITERAL  shift, and go to state 9

    exp         go to state 66
    unaryExp    go to state 16
    primaryExp  go to state 17
    constExp    go to state 18


State 46

   19 exp: exp . BOOLOR exp
   20    | exp . BOOLAND exp
   21    | exp . EQ exp
   22    | exp . NE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . LT exp
   26    | exp . LE exp
   27    | exp . ADD exp
   28    | exp . SUB exp
   29    | exp . MUL exp
   30    | exp . DIV exp
   36 primaryExp: OPENPAR exp . CLOSEPAR

    CLOSEPAR  shift, and go to state 49
    BOOLOR    shift, and go to state 34
    BOOLAND   shift, and go to state 35
    NE        shift, and go to state 36
    EQ        shift, and go to state 37
    GE        shift, and go to state 38
    LE        shift, and go to state 39
    GT        shift, and go to state 40
    LT        shift, and go to state 41
    ADD       shift, and go to state 42
    SUB       shift, and go to state 43
    MUL       shift, and go to state 44
    DIV       shift, and go to state 45


State 47

   15 ifstmt: IF exp THEN . OPENBPAR statement CLOSEBPAR optelsestmt

    OPENBPAR  shift, and go to state 67


State 48

   10 statement: OPENPAR statement CLOSEPAR .

    $default  reduce using rule 10 (statement)


State 49

   36 primaryExp: OPENPAR exp CLOSEPAR .

    $default  reduce using rule 36 (primaryExp)


State 50

   13 asgnstmt: ID ASSP exp .
   19 exp: exp . BOOLOR exp
   20    | exp . BOOLAND exp
   21    | exp . EQ exp
   22    | exp . NE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . LT exp
   26    | exp . LE exp
   27    | exp . ADD exp
   28    | exp . SUB exp
   29    | exp . MUL exp
   30    | exp . DIV exp

    BOOLOR   shift, and go to state 34
    BOOLAND  shift, and go to state 35
    NE       shift, and go to state 36
    EQ       shift, and go to state 37
    GE       shift, and go to state 38
    LE       shift, and go to state 39
    GT       shift, and go to state 40
    LT       shift, and go to state 41
    ADD      shift, and go to state 42
    SUB      shift, and go to state 43
    MUL      shift, and go to state 44
    DIV      shift, and go to state 45

    $default  reduce using rule 13 (asgnstmt)


State 51

   14 asgnstmt: ID ASSN exp .
   19 exp: exp . BOOLOR exp
   20    | exp . BOOLAND exp
   21    | exp . EQ exp
   22    | exp . NE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . LT exp
   26    | exp . LE exp
   27    | exp . ADD exp
   28    | exp . SUB exp
   29    | exp . MUL exp
   30    | exp . DIV exp

    BOOLOR   shift, and go to state 34
    BOOLAND  shift, and go to state 35
    NE       shift, and go to state 36
    EQ       shift, and go to state 37
    GE       shift, and go to state 38
    LE       shift, and go to state 39
    GT       shift, and go to state 40
    LT       shift, and go to state 41
    ADD      shift, and go to state 42
    SUB      shift, and go to state 43
    MUL      shift, and go to state 44
    DIV      shift, and go to state 45

    $default  reduce using rule 14 (asgnstmt)


State 52

    2 statement: statement . AND statement
    3          | statement . OR statement
    4          | statement . CHOP statement
    4          | statement CHOP statement .

    OR   shift, and go to state 32
    AND  shift, and go to state 33

    $default  reduce using rule 4 (statement)


State 53

    2 statement: statement . AND statement
    3          | statement . OR statement
    3          | statement OR statement .
    4          | statement . CHOP statement

    AND  shift, and go to state 33

    $default  reduce using rule 3 (statement)


State 54

    2 statement: statement . AND statement
    2          | statement AND statement .
    3          | statement . OR statement
    4          | statement . CHOP statement

    $default  reduce using rule 2 (statement)


State 55

   19 exp: exp . BOOLOR exp
   19    | exp BOOLOR exp .
   20    | exp . BOOLAND exp
   21    | exp . EQ exp
   22    | exp . NE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . LT exp
   26    | exp . LE exp
   27    | exp . ADD exp
   28    | exp . SUB exp
   29    | exp . MUL exp
   30    | exp . DIV exp

    BOOLAND  shift, and go to state 35
    NE       shift, and go to state 36
    EQ       shift, and go to state 37
    GE       shift, and go to state 38
    LE       shift, and go to state 39
    GT       shift, and go to state 40
    LT       shift, and go to state 41
    ADD      shift, and go to state 42
    SUB      shift, and go to state 43
    MUL      shift, and go to state 44
    DIV      shift, and go to state 45

    $default  reduce using rule 19 (exp)


State 56

   19 exp: exp . BOOLOR exp
   20    | exp . BOOLAND exp
   20    | exp BOOLAND exp .
   21    | exp . EQ exp
   22    | exp . NE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . LT exp
   26    | exp . LE exp
   27    | exp . ADD exp
   28    | exp . SUB exp
   29    | exp . MUL exp
   30    | exp . DIV exp

    NE   shift, and go to state 36
    EQ   shift, and go to state 37
    GE   shift, and go to state 38
    LE   shift, and go to state 39
    GT   shift, and go to state 40
    LT   shift, and go to state 41
    ADD  shift, and go to state 42
    SUB  shift, and go to state 43
    MUL  shift, and go to state 44
    DIV  shift, and go to state 45

    $default  reduce using rule 20 (exp)


State 57

   19 exp: exp . BOOLOR exp
   20    | exp . BOOLAND exp
   21    | exp . EQ exp
   22    | exp . NE exp
   22    | exp NE exp .
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . LT exp
   26    | exp . LE exp
   27    | exp . ADD exp
   28    | exp . SUB exp
   29    | exp . MUL exp
   30    | exp . DIV exp

    GE   shift, and go to state 38
    LE   shift, and go to state 39
    GT   shift, and go to state 40
    LT   shift, and go to state 41
    ADD  shift, and go to state 42
    SUB  shift, and go to state 43
    MUL  shift, and go to state 44
    DIV  shift, and go to state 45

    $default  reduce using rule 22 (exp)


State 58

   19 exp: exp . BOOLOR exp
   20    | exp . BOOLAND exp
   21    | exp . EQ exp
   21    | exp EQ exp .
   22    | exp . NE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . LT exp
   26    | exp . LE exp
   27    | exp . ADD exp
   28    | exp . SUB exp
   29    | exp . MUL exp
   30    | exp . DIV exp

    GE   shift, and go to state 38
    LE   shift, and go to state 39
    GT   shift, and go to state 40
    LT   shift, and go to state 41
    ADD  shift, and go to state 42
    SUB  shift, and go to state 43
    MUL  shift, and go to state 44
    DIV  shift, and go to state 45

    $default  reduce using rule 21 (exp)


State 59

   19 exp: exp . BOOLOR exp
   20    | exp . BOOLAND exp
   21    | exp . EQ exp
   22    | exp . NE exp
   23    | exp . GT exp
   24    | exp . GE exp
   24    | exp GE exp .
   25    | exp . LT exp
   26    | exp . LE exp
   27    | exp . ADD exp
   28    | exp . SUB exp
   29    | exp . MUL exp
   30    | exp . DIV exp

    ADD  shift, and go to state 42
    SUB  shift, and go to state 43
    MUL  shift, and go to state 44
    DIV  shift, and go to state 45

    $default  reduce using rule 24 (exp)


State 60

   19 exp: exp . BOOLOR exp
   20    | exp . BOOLAND exp
   21    | exp . EQ exp
   22    | exp . NE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . LT exp
   26    | exp . LE exp
   26    | exp LE exp .
   27    | exp . ADD exp
   28    | exp . SUB exp
   29    | exp . MUL exp
   30    | exp . DIV exp

    ADD  shift, and go to state 42
    SUB  shift, and go to state 43
    MUL  shift, and go to state 44
    DIV  shift, and go to state 45

    $default  reduce using rule 26 (exp)


State 61

   19 exp: exp . BOOLOR exp
   20    | exp . BOOLAND exp
   21    | exp . EQ exp
   22    | exp . NE exp
   23    | exp . GT exp
   23    | exp GT exp .
   24    | exp . GE exp
   25    | exp . LT exp
   26    | exp . LE exp
   27    | exp . ADD exp
   28    | exp . SUB exp
   29    | exp . MUL exp
   30    | exp . DIV exp

    ADD  shift, and go to state 42
    SUB  shift, and go to state 43
    MUL  shift, and go to state 44
    DIV  shift, and go to state 45

    $default  reduce using rule 23 (exp)


State 62

   19 exp: exp . BOOLOR exp
   20    | exp . BOOLAND exp
   21    | exp . EQ exp
   22    | exp . NE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . LT exp
   25    | exp LT exp .
   26    | exp . LE exp
   27    | exp . ADD exp
   28    | exp . SUB exp
   29    | exp . MUL exp
   30    | exp . DIV exp

    ADD  shift, and go to state 42
    SUB  shift, and go to state 43
    MUL  shift, and go to state 44
    DIV  shift, and go to state 45

    $default  reduce using rule 25 (exp)


State 63

   19 exp: exp . BOOLOR exp
   20    | exp . BOOLAND exp
   21    | exp . EQ exp
   22    | exp . NE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . LT exp
   26    | exp . LE exp
   27    | exp . ADD exp
   27    | exp ADD exp .
   28    | exp . SUB exp
   29    | exp . MUL exp
   30    | exp . DIV exp

    MUL  shift, and go to state 44
    DIV  shift, and go to state 45

    $default  reduce using rule 27 (exp)


State 64

   19 exp: exp . BOOLOR exp
   20    | exp . BOOLAND exp
   21    | exp . EQ exp
   22    | exp . NE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . LT exp
   26    | exp . LE exp
   27    | exp . ADD exp
   28    | exp . SUB exp
   28    | exp SUB exp .
   29    | exp . MUL exp
   30    | exp . DIV exp

    MUL  shift, and go to state 44
    DIV  shift, and go to state 45

    $default  reduce using rule 28 (exp)


State 65

   19 exp: exp . BOOLOR exp
   20    | exp . BOOLAND exp
   21    | exp . EQ exp
   22    | exp . NE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . LT exp
   26    | exp . LE exp
   27    | exp . ADD exp
   28    | exp . SUB exp
   29    | exp . MUL exp
   29    | exp MUL exp .
   30    | exp . DIV exp

    $default  reduce using rule 29 (exp)


State 66

   19 exp: exp . BOOLOR exp
   20    | exp . BOOLAND exp
   21    | exp . EQ exp
   22    | exp . NE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . LT exp
   26    | exp . LE exp
   27    | exp . ADD exp
   28    | exp . SUB exp
   29    | exp . MUL exp
   30    | exp . DIV exp
   30    | exp DIV exp .

    $default  reduce using rule 30 (exp)


State 67

   15 ifstmt: IF exp THEN OPENBPAR . statement CLOSEBPAR optelsestmt

    IF          shift, and go to state 1
    SKIP        shift, and go to state 2
    INT         shift, and go to state 3
    OPENPAR     shift, and go to state 4
    END         shift, and go to state 5
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 8
    INTLITERAL  shift, and go to state 9

    statement    go to state 68
    declaration  go to state 12
    asgnstmt     go to state 13
    ifstmt       go to state 14
    exp          go to state 15
    unaryExp     go to state 16
    primaryExp   go to state 17
    constExp     go to state 18


State 68

    2 statement: statement . AND statement
    3          | statement . OR statement
    4          | statement . CHOP statement
   15 ifstmt: IF exp THEN OPENBPAR statement . CLOSEBPAR optelsestmt

    CLOSEBPAR  shift, and go to state 69
    CHOP       shift, and go to state 31
    OR         shift, and go to state 32
    AND        shift, and go to state 33


State 69

   15 ifstmt: IF exp THEN OPENBPAR statement CLOSEBPAR . optelsestmt

    ELSE  shift, and go to state 70

    $default  reduce using rule 17 (optelsestmt)

    optelsestmt  go to state 71


State 70

   16 optelsestmt: ELSE . OPENBPAR statement CLOSEBPAR

    OPENBPAR  shift, and go to state 72


State 71

   15 ifstmt: IF exp THEN OPENBPAR statement CLOSEBPAR optelsestmt .

    $default  reduce using rule 15 (ifstmt)


State 72

   16 optelsestmt: ELSE OPENBPAR . statement CLOSEBPAR

    IF          shift, and go to state 1
    SKIP        shift, and go to state 2
    INT         shift, and go to state 3
    OPENPAR     shift, and go to state 4
    END         shift, and go to state 5
    SUB         shift, and go to state 6
    NEGATION    shift, and go to state 7
    ID          shift, and go to state 8
    INTLITERAL  shift, and go to state 9

    statement    go to state 73
    declaration  go to state 12
    asgnstmt     go to state 13
    ifstmt       go to state 14
    exp          go to state 15
    unaryExp     go to state 16
    primaryExp   go to state 17
    constExp     go to state 18


State 73

    2 statement: statement . AND statement
    3          | statement . OR statement
    4          | statement . CHOP statement
   16 optelsestmt: ELSE OPENBPAR statement . CLOSEBPAR

    CLOSEBPAR  shift, and go to state 74
    CHOP       shift, and go to state 31
    OR         shift, and go to state 32
    AND        shift, and go to state 33


State 74

   16 optelsestmt: ELSE OPENBPAR statement CLOSEBPAR .

    $default  reduce using rule 16 (optelsestmt)
